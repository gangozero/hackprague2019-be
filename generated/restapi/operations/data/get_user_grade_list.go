// Code generated by go-swagger; DO NOT EDIT.

package data

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetUserGradeListHandlerFunc turns a function with the right signature into a get user grade list handler
type GetUserGradeListHandlerFunc func(GetUserGradeListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetUserGradeListHandlerFunc) Handle(params GetUserGradeListParams) middleware.Responder {
	return fn(params)
}

// GetUserGradeListHandler interface for that can handle valid get user grade list params
type GetUserGradeListHandler interface {
	Handle(GetUserGradeListParams) middleware.Responder
}

// NewGetUserGradeList creates a new http.Handler for the get user grade list operation
func NewGetUserGradeList(ctx *middleware.Context, handler GetUserGradeListHandler) *GetUserGradeList {
	return &GetUserGradeList{Context: ctx, Handler: handler}
}

/*GetUserGradeList swagger:route GET /grade/{profile_id}/{user_id} data getUserGradeList

Get grade list for selected user

*/
type GetUserGradeList struct {
	Context *middleware.Context
	Handler GetUserGradeListHandler
}

func (o *GetUserGradeList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetUserGradeListParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
